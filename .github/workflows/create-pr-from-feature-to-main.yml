name: Open PR to main when merged into release

on:
  pull_request:
    types: [closed]
    branches:
      - release/**

permissions:
  contents: write
  pull-requests: write

jobs:
  cherry-pick-to-main:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # fetch full history so cherry-pick works

      - name: Set up Git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Cherry-pick and create PR
        env:
          GITHUB_TOKEN: ${{ secrets.MY_PAT }}
        run: |
          SOURCE_BRANCH="${{ github.event.pull_request.head.ref }}"
          TARGET_BRANCH="main"
          NEW_BRANCH="cp-${SOURCE_BRANCH}-to-main"

          echo "✅ Source branch: $SOURCE_BRANCH"
          echo "✅ Creating new branch: $NEW_BRANCH"

          # Checkout main and create a new branch from it
          git checkout $TARGET_BRANCH
          git pull origin $TARGET_BRANCH
          git checkout -b $NEW_BRANCH

          # Get the list of commits in the merged PR
          PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          COMMITS=$(gh pr view $PR_NUMBER --json commits -q ".commits[].oid")

          echo "✅ Cherry-picking commits:"
          for COMMIT in $COMMITS; do
            echo "Cherry-picking $COMMIT"
            git cherry-pick $COMMIT || exit 1
          done

          git push origin $NEW_BRANCH

          # Get the title of the original PR
          PR_TITLE="${{ github.event.pull_request.title }}"
          NEW_TITLE="${PR_TITLE} on the main"

          # Create the pull request
          gh pr create --title "$NEW_TITLE" \
                       --body "Cherry-picked from \`$SOURCE_BRANCH\` to \`main\`" \
                       --base "$TARGET_BRANCH" \
                       --head "$NEW_BRANCH"
